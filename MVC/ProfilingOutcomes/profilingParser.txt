Filename: /Users/svitol/Desktop/WIP/TESI/Traffic_Generator/Master-thesis-MQTT-traffic-generator/MVC/Utils/MQTTP.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    84  371.375 MiB 49745.109 MiB         293   	@staticmethod
    85                                         	@profile
    86                                         	def ParseConnectPacket(MQTT5_layer):
    87                                         		
    88  371.375 MiB   -5.281 MiB         293   		raw_layer = bytes(MQTT5_layer)
    89                                         
    90                                         		#Fixed header processing
    91  371.375 MiB   -5.328 MiB         293   		IsConnected = raw_layer[0] & 0xF0
    92  371.375 MiB   -5.328 MiB         293   		IsMalformed = raw_layer[0] & 0x0F
    93                                         
    94  371.375 MiB   -5.328 MiB         293   		if IsConnected != 0x10 or IsMalformed != 0x00:
    95                                         			
    96                                         			print("Not CONNECT packet or Malformed packet")
    97                                         
    98  371.375 MiB   -5.328 MiB         293   		try:
    99  371.375 MiB   -5.328 MiB         293   			idx = 1
   100  371.375 MiB   -5.328 MiB         293   			RemainingBytes, VLFBytes = MQTTParser.VLFDecode(raw_layer, idx)
   101                                         
   102                                         			#Variable header processing
   103                                         			#pointer to the first byte of the variable header
   104  371.375 MiB   -5.328 MiB         293   			idx += VLFBytes
   105  371.375 MiB   -5.328 MiB         293   			ProtocolNameLength = int.from_bytes(raw_layer[idx:idx+2], "big")
   106  371.375 MiB   -5.328 MiB         293   			idx += 2 #pointer to the first byte of the name of the protocol
   107  371.375 MiB   -5.328 MiB         293   			ProtocolName = str(raw_layer[idx:idx+ProtocolNameLength], "utf-8")
   108  371.375 MiB   -5.328 MiB         293   			idx += ProtocolNameLength
   109  371.375 MiB   -5.328 MiB         293   			ProtocolLevel = raw_layer[idx]	#5 expected for MQTTv5
   110  371.375 MiB   -5.328 MiB         293   			idx += 1
   111  371.375 MiB   -5.328 MiB         293   			ConnectionFlags = raw_layer[idx]	#connection configs 
   112  371.375 MiB   -5.328 MiB         293   			idx += 1
   113  371.375 MiB   -5.328 MiB         293   			KeepAlive = int.from_bytes(raw_layer[idx:idx+2], "big")	#Timeout in milliseconds
   114  371.375 MiB   -5.328 MiB         293   			idx += 2
   115  371.375 MiB   -5.328 MiB         293   			PropertiesBytes, VLFBytes = MQTTParser.VLFDecode(raw_layer, idx)
   116  371.375 MiB   -5.328 MiB         293   			idx += VLFBytes
   117  371.375 MiB   -5.328 MiB         293   			idx += PropertiesBytes
   118                                         
   119                                         			#Payload Processing
   120  371.375 MiB   -5.328 MiB         293   			ClientIDLength = int.from_bytes(raw_layer[idx:idx+2], "big")
   121  371.375 MiB   -5.328 MiB         293   			idx += 2
   122  371.375 MiB   -5.328 MiB         293   			ClientID = str(raw_layer[idx:idx+ClientIDLength], "utf-8")
   123                                         
   124  371.375 MiB   -5.328 MiB         293   			return (ClientID, ProtocolLevel, ProtocolName)
   125                                         
   126                                         		except MalformedPacketException as e:
   127                                         			raise e


Filename: /Users/svitol/Desktop/WIP/TESI/Traffic_Generator/Master-thesis-MQTT-traffic-generator/MVC/Utils/MQTTP.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   131  371.062 MiB  742.109 MiB           2   	@staticmethod
   132                                         	@profile
   133                                         	def ParsePublishPacket(MQTT5_layer):
   134                                         		
   135  371.062 MiB    0.000 MiB           2   		raw_layer = bytes(MQTT5_layer)
   136                                         
   137                                         		#Fixed header processing
   138  371.062 MiB    0.000 MiB           2   		IsPublish = raw_layer[0] & 0xF0
   139  371.062 MiB    0.000 MiB           2   		PublishProperties = raw_layer[0] & 0x0F
   140                                         
   141  371.062 MiB    0.000 MiB           2   		if IsPublish != 0x30:
   142                                         			print("No PUBLISH packet or Malformed packet")
   143                                         			raise MalformedPacketException()
   144                                         
   145  371.062 MiB    0.000 MiB           2   		QoS = (PublishProperties & 0x06) >> 1
   146                                         
   147  371.062 MiB    0.000 MiB           2   		if QoS > 2:
   148                                         			print(f"Malformed packet: {QoS}")
   149                                         			raise MalformedPacketException()
   150                                         
   151  371.062 MiB    0.000 MiB           2   		try:
   152                                         
   153  371.062 MiB    0.000 MiB           2   			DupFlag = (PublishProperties & 0x08) >> 3
   154  371.062 MiB    0.000 MiB           2   			RetainFlag = PublishProperties & 0x01
   155                                         			
   156  371.062 MiB    0.000 MiB           2   			idx = 1
   157  371.062 MiB    0.000 MiB           2   			RemainingBytes, VLFBytes = MQTTParser.VLFDecode(raw_layer, idx)
   158  371.062 MiB    0.000 MiB           2   			idx += VLFBytes
   159                                         
   160                                         			#Variable header
   161  371.062 MiB    0.000 MiB           2   			TopicNameLength = int.from_bytes(raw_layer[idx:idx+2], "big")
   162  371.062 MiB    0.000 MiB           2   			idx += 2
   163  371.062 MiB    0.000 MiB           2   			Topic = str(raw_layer[idx:idx+TopicNameLength], "utf-8")
   164  371.062 MiB    0.000 MiB           2   			idx += TopicNameLength
   165  371.062 MiB    0.000 MiB           2   			PacketID = None
   166  371.062 MiB    0.000 MiB           2   			if QoS > 0:
   167                                         			
   168  371.062 MiB    0.000 MiB           2   				PacketID = int.from_bytes(raw_layer[idx:idx+2], "big")
   169  371.062 MiB    0.000 MiB           2   				idx += 2
   170                                         
   171  371.062 MiB    0.000 MiB           2   			PropertiesBytes, VLFBytes = MQTTParser.VLFDecode(raw_layer, idx)
   172                                         
   173  371.062 MiB    0.000 MiB           2   			idx += VLFBytes
   174  371.062 MiB    0.000 MiB           2   			idx += PropertiesBytes
   175                                         
   176                                         			#Payload
   177                                         			#Controllare se Ã¨ necessario mettere indice di fine, credo di no.
   178  371.062 MiB    0.000 MiB           2   			Payload = str(raw_layer[idx:], "utf-8")
   179                                         
   180  371.062 MiB    0.000 MiB           2   			return (QoS, Topic, PacketID, Payload)
   181                                         
   182                                         		except MalformedPacketException as e:
   183                                         			raise e


Filename: /Users/svitol/Desktop/WIP/TESI/Traffic_Generator/Master-thesis-MQTT-traffic-generator/MVC/Utils/MQTTP.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   186  370.172 MiB  370.172 MiB           1   	@staticmethod
   187                                         	@profile
   188                                         	def ParseSubscribePacket(MQTT5_layer):
   189                                         		
   190  370.172 MiB    0.000 MiB           1   		raw_layer = bytes(MQTT5_layer)
   191                                         
   192  370.172 MiB    0.000 MiB           1   		try:
   193                                         			#Fixed Header
   194  370.172 MiB    0.000 MiB           1   			IsSubscribe = raw_layer[0] & 0xF0
   195  370.172 MiB    0.000 MiB           1   			Flags = raw_layer[0] & 0x0F
   196  370.172 MiB    0.000 MiB           1   			idx = 1
   197  370.172 MiB    0.000 MiB           1   			RemainingBytes, VLFBytes = MQTTParser.VLFDecode(raw_layer, idx)
   198  370.172 MiB    0.000 MiB           1   			idx += VLFBytes
   199  370.172 MiB    0.000 MiB           1   			TotalPacketLength = idx + RemainingBytes
   200                                         			#Variable Header
   201  370.172 MiB    0.000 MiB           1   			PacketID = int.from_bytes(raw_layer[idx:idx+2], "big")
   202  370.172 MiB    0.000 MiB           1   			idx += 2
   203  370.172 MiB    0.000 MiB           1   			PropertiesBytes, VLFBytes = MQTTParser.VLFDecode(raw_layer, idx)
   204  370.172 MiB    0.000 MiB           1   			idx += VLFBytes
   205  370.172 MiB    0.000 MiB           1   			idx += PropertiesBytes
   206                                         
   207  370.172 MiB    0.000 MiB           1   			Topics = []
   208  370.172 MiB    0.000 MiB           1   			SubscriptionOptions = []
   209  370.172 MiB    0.000 MiB           1   			QoSs = []	#Quality of Service(s) -> this explain the final s
   210  370.172 MiB    0.000 MiB           1   			TopicQos = []
   211                                         			#Payload
   212  370.172 MiB    0.000 MiB           2   			while idx < TotalPacketLength:
   213                                         
   214  370.172 MiB    0.000 MiB           1   				TopicLength = int.from_bytes(raw_layer[idx:idx+2], "big")
   215  370.172 MiB    0.000 MiB           1   				idx += 2
   216  370.172 MiB    0.000 MiB           1   				Topic = str(raw_layer[idx:idx+TopicLength], "utf-8")
   217  370.172 MiB    0.000 MiB           1   				Topics.append(Topic)
   218  370.172 MiB    0.000 MiB           1   				idx += TopicLength
   219  370.172 MiB    0.000 MiB           1   				SubscriptionOptions.append(raw_layer[idx])	#Save the byte that contains Subscription options
   220  370.172 MiB    0.000 MiB           1   				QoS = raw_layer[idx] & 0x03
   221  370.172 MiB    0.000 MiB           1   				QoSs.append(QoS)
   222  370.172 MiB    0.000 MiB           1   				idx += 1
   223  370.172 MiB    0.000 MiB           1   				TopicQos.append((Topic, QoS))
   224                                         
   225  370.172 MiB    0.000 MiB           1   			return (PacketID, TopicQos)
   226                                         
   227                                         		except MalformedPacketException as e:
   228                                         			raise e
   229                                         		#return {"PacketID":PacketID, ("QoSs":QoSs, "Topics":Topics)}


Filename: /Users/svitol/Desktop/WIP/TESI/Traffic_Generator/Master-thesis-MQTT-traffic-generator/MVC/Utils/MQTTP.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   238  371.375 MiB 77965.469 MiB         295   	@staticmethod
   239                                         	@profile
   240                                         	def ParseConnectPacket(MQTT3_layer):
   241                                         		
   242  371.375 MiB   -5.359 MiB         295   		raw_layer = bytes(MQTT3_layer)
   243  371.375 MiB   -5.359 MiB         295   		idx = 1
   244                                         
   245                                         		#Fixed header processing
   246  371.375 MiB   -5.359 MiB         295   		IsConnected = raw_layer[0] & 0x10
   247  371.375 MiB   -5.359 MiB         295   		IsMalformed = raw_layer[0] & 0x0F
   248                                         
   249  371.375 MiB   -5.359 MiB         295   		if IsConnected != 0x10 or IsMalformed != 0x00:
   250                                         			
   251                                         			print("Not CONNECT packet or Malformed packet")
   252                                         
   253  371.375 MiB   -5.359 MiB         295   		try:
   254                                         			
   255  371.375 MiB   -5.359 MiB         295   			RemainingBytes, VLFBytes = MQTTParser.VLFDecode(raw_layer, idx)
   256  371.375 MiB   -5.359 MiB         295   			idx += VLFBytes
   257                                         
   258                                         			#Variable header processing
   259  371.375 MiB   -5.359 MiB         295   			ProtocolNameLength = int.from_bytes(raw_layer[idx:idx+2], "big")
   260  371.375 MiB   -5.359 MiB         295   			idx += 2
   261  371.375 MiB   -5.359 MiB         295   			ProtocolName = str(raw_layer[idx:idx+ProtocolNameLength], "utf-8")
   262  371.375 MiB   -5.359 MiB         295   			idx += ProtocolNameLength
   263  371.375 MiB   -5.359 MiB         295   			ProtocolLevel = int.from_bytes(raw_layer[idx:idx+1], "big")	#3-4 for mqtt3 and mqtt3.1.1
   264  371.375 MiB   -5.359 MiB         295   			idx += 1
   265  371.375 MiB   -5.359 MiB         295   			BitField = raw_layer[idx]
   266  371.375 MiB   -5.359 MiB         295   			idx += 1
   267  371.375 MiB   -5.359 MiB         295   			KeepAlive = int.from_bytes(raw_layer[idx:idx+2], "big")	#Timeout in milliseconds
   268  371.375 MiB   -5.359 MiB         295   			idx += 2
   269                                         			
   270                                         			#Payload
   271  371.375 MiB   -5.359 MiB         295   			ClientIDLength = int.from_bytes(raw_layer[idx:idx+2], "big")
   272  371.375 MiB   -5.359 MiB         295   			idx += 2
   273  371.375 MiB   -5.359 MiB         295   			ClientID = str(raw_layer[idx:idx+ClientIDLength], "utf-8")
   274  371.375 MiB   -5.359 MiB         295   			idx += ClientIDLength
   275                                         
   276  371.375 MiB   -5.359 MiB         295   			return (ClientID, ProtocolLevel, ProtocolName)
   277                                         
   278                                         		except MalformedPacketException as e:
   279                                         			raise e
   280                                         		#Continue with will fields... it is quite different from v5


Filename: /Users/svitol/Desktop/WIP/TESI/Traffic_Generator/Master-thesis-MQTT-traffic-generator/MVC/Utils/MQTTP.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   285  371.375 MiB 60142.156 MiB         820   	@staticmethod
   286                                         	@profile
   287                                         	def ParsePublishPacket(MQTT3_layer):
   288                                         		
   289  371.375 MiB   -3.844 MiB         820   		raw_layer = bytes(MQTT3_layer)
   290  371.375 MiB   -3.859 MiB         820   		idx = 1
   291                                         
   292  371.375 MiB   -3.859 MiB         820   		try:
   293                                         			#Fixed Header
   294  371.375 MiB   -3.859 MiB         820   			IsPublish = raw_layer[0] & 0xF0
   295  371.375 MiB   -3.859 MiB         820   			PublishProperties = raw_layer[0] & 0x0F
   296  371.375 MiB   -3.859 MiB         820   			DupFlag = PublishProperties >> 3
   297  371.375 MiB   -3.859 MiB         820   			QoS = (PublishProperties & 0x06) >> 1
   298  371.375 MiB   -3.859 MiB         820   			RetainFlag = PublishProperties & 0x01
   299                                         
   300  371.375 MiB   -3.859 MiB         820   			RemainingBytes, VLFBytes = MQTTParser.VLFDecode(raw_layer, idx)
   301  371.375 MiB   -3.859 MiB         820   			idx += VLFBytes
   302                                         
   303                                         			#Variable Header
   304  371.375 MiB   -3.859 MiB         820   			TopicNameLength = int.from_bytes(raw_layer[idx:idx+2], "big")
   305  371.375 MiB   -3.859 MiB         820   			idx += 2
   306  371.375 MiB   -3.859 MiB         820   			Topic = str(raw_layer[idx:idx+TopicNameLength], "utf-8")
   307  371.375 MiB   -3.859 MiB         820   			idx += TopicNameLength
   308                                         
   309  371.375 MiB   -3.859 MiB         820   			PacketID = None
   310                                         			
   311  371.375 MiB   -3.859 MiB         820   			if QoS > 0:
   312                                         				
   313  371.375 MiB   -0.641 MiB         236   				PacketID = int.from_bytes(raw_layer[idx:idx+2], "big")
   314  371.375 MiB   -0.344 MiB         236   				idx +=2
   315                                         
   316                                         			#Payload
   317  371.375 MiB   -3.562 MiB         820   			Payload = str(raw_layer[idx:], "utf-8")
   318                                         
   319  371.375 MiB   -3.797 MiB         797   			return (QoS, Topic, PacketID, Payload)
   320                                         
   321  371.375 MiB   -0.062 MiB          23   		except MalformedPacketException as e:
   322                                         			raise e


Filename: /Users/svitol/Desktop/WIP/TESI/Traffic_Generator/Master-thesis-MQTT-traffic-generator/MVC/Utils/MQTTP.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   326  371.375 MiB 76852.531 MiB         284   	@staticmethod
   327                                         	@profile
   328                                         	def ParseSubscribePacket(MQTT3_layer):
   329                                         		
   330  371.375 MiB   -5.203 MiB         284   		raw_layer = bytes(MQTT3_layer)
   331  371.375 MiB   -5.203 MiB         284   		idx = 1
   332                                         
   333                                         		#Fixed Header
   334  371.375 MiB   -5.203 MiB         284   		IsSubscribe = raw_layer[0] & 0xF0
   335  371.375 MiB   -5.203 MiB         284   		Flags = raw_layer[0] & 0x0F
   336                                         		
   337  371.375 MiB   -5.203 MiB         284   		if IsSubscribe != 0x80 or Flags != 0x02:
   338                                         
   339  371.375 MiB   -5.203 MiB         283   			print("Not SUBSCRIBE packet or Malformed packet")
   340                                         
   341  371.375 MiB   -5.203 MiB         284   		try:
   342                                         			
   343  371.375 MiB   -5.203 MiB         284   			RemainingBytes, VLFBytes = MQTTParser.VLFDecode(raw_layer, idx)
   344  371.375 MiB   -5.203 MiB         284   			idx += VLFBytes
   345  371.375 MiB   -5.203 MiB         284   			TotalPacketLength = idx + RemainingBytes
   346                                         
   347                                         			#Variable Header
   348  371.375 MiB   -5.203 MiB         284   			PacketID = int.from_bytes(raw_layer[idx:idx+2], "big")
   349  371.375 MiB   -5.203 MiB         284   			idx += 2
   350                                         
   351                                         			
   352                                         			#Payload
   353  371.375 MiB   -5.203 MiB         284   			TopicQos = []
   354  371.375 MiB   -5.203 MiB         285   			while idx < TotalPacketLength:
   355                                         				
   356  371.375 MiB   -5.203 MiB         284   				TopicLength = int.from_bytes(raw_layer[idx:idx+2], "big")
   357  371.375 MiB   -5.203 MiB         284   				idx += 2
   358  371.375 MiB   -5.203 MiB         284   				Topic = str(raw_layer[idx:idx+TopicLength], "utf-8")
   359  371.375 MiB   -5.203 MiB         284   				idx += TopicLength
   360  371.375 MiB   -5.203 MiB         284   				QoS = raw_layer[idx]
   361  370.250 MiB    0.000 MiB           1   				TopicQos.append((Topic, QoS))
   362  370.250 MiB    0.000 MiB           1   				idx += 1	
   363                                         
   364  370.250 MiB    0.000 MiB           1   			return (PacketID, TopicQos)
   365                                         
   366  371.375 MiB   -5.203 MiB         283   		except MalformedPacketException as e:
   367                                         			raise e
